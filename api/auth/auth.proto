syntax = "proto3";

package auth;

option go_package = "github.com/esklo/residents-tracking-platform-backend/gen/proto/auth";

import "empty/empty.proto";
import "user/user.proto";
import "google/protobuf/timestamp.proto";

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {};
  rpc Logout(empty.Empty) returns (empty.Empty) {};

  rpc RequestPublicKeyAttestation(empty.Empty) returns (PublicKeyCredentialsResponse){};
  rpc PublicKeyAttestation(PublicKeyCredentialsRequest) returns (empty.Empty){};
  rpc RequestPublicKeyAssertion(empty.Empty) returns (PublicKeyCredentialsResponse){};
  rpc PublicKeyAssertion(PublicKeyCredentialsRequest) returns (LoginResponse){};

  rpc GetPublicKeys(empty.Empty) returns (GetPublicKeysResponse){};
  rpc DeletePublicKey(Key) returns (empty.Empty){};

  rpc ChangePassword(ChangePasswordRequest)returns (empty.Empty){};
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
  user.User user = 2;
}

message PublicKeyCredentialsResponse {
  bytes flowId = 1;
  bytes credentials = 2;
}

message PublicKeyCredentialsRequest {
  bytes flowId = 1;
  string credentials = 2;
}


message GetPublicKeysResponse {
  repeated Key keys = 1;
}

message Key {
  bytes id = 1;
  optional google.protobuf.Timestamp created_at = 2;
  optional google.protobuf.Timestamp last_used_at = 3;
  optional string requested_from = 4;
}

message ChangePasswordRequest {
  string CurrentPassword = 1;
  string NewPassword = 2;
  string NewPasswordConfirmation = 3;
}